<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace : 命名空间
-->


<!--下面是Mapper映射的SQL文件信息-->
<mapper namespace="com.cx.mapper.BrandMapper">


    <!--
        条件查询
    -->
    <!--<select id="selectByCondition" resultType="Brand">
        select *
        from tb_brand where status=#{status}
                        and company_name like #{companyName}
                        and brand_name like #{brandName};
    </select>-->

    <!--
        多条件动态SQL查询
            * if:条件判断
                * test：逻辑表达式
            *问题解决办法：
                * 恒等式 where 1=1
                * <where> 替换 where 关键字
    -->
    <select id="selectByCondition" resultType="Brand">
        select *
        from tb_brand
        /* where 1 = 1 */
        <where>

            <if test="status!=null">
                and status = #{status}
            </if>

            <if test="companyName!=null and companyName!=''">
                and company_name like #{companyName}
            </if>

            <if test="brandName!=null and brandName!=''">
                and brand_name like #{brandName}
            </if>

        </where>

    </select>


    <select id="selectByConditionSingle" resultType="Brand">
        select *
        from tb_brand
        <where>

            <choose> <!--相当于switch-->
                <when test="status!=null"> <!--相当于case-->
                    status = #{status}
                </when>
                <when test="companyName!=null and companyName!=''"> <!--相当于case-->
                    company_name like #{companyName}
                </when>
                <when test="brandName!=null and brandName!=''"> <!--相当于case-->
                    brand_name like #{brandName}
                </when>
            </choose>

        </where>
    </select>



    <!--  where brand_name=#{brand.brandName};  -->
    <select id="selectByPageAndCondition" resultType="Brand">
        select *
        from tb_brand
        <where>
            <if test="brand.brandName!= null and brand.brandName !=''">
                and brand_name like #{brand.brandName}
            </if>
            <if test="brand.companyName!= null and brand.companyName !=''">
                and company_name like #{brand.companyName}
            </if>
            <if test="brand.status!= null">
                and status=#{brand.status}
            </if>
        </where>

        limit #{begin},#{size}

    </select>


    <!--只有一个brand参数,没加Param,所以不用brand.brandName这样的形式-->
    <select id="selectTotalCountByCondition" resultType="java.lang.Integer">
        select count(*)
        from tb_brand
        <where>
            <if test="brandName!= null and brandName !=''">
                and brand_name like #{brandName}
            </if>
            <if test="companyName!= null and companyName !=''">
                and company_name like #{companyName}
            </if>
            <if test="status!= null">
                and status=#{status}
            </if>
        </where>

    </select>

    <!--添加数据-->
    <!-- useGeneratedKeys设为true ，keyProperty设为主键的名称，就能获取到主键的值了 -->
<!--    <insert id="add" useGeneratedKeys="true" keyProperty="id">-->
<!--        insert into tb_brand (brand_name, company_name, ordered, description, status)-->
<!--        values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status});-->
<!--    </insert>-->


    <!--修改数据-->
    <!--    <update id="update">-->
    <!--        update tb_brand-->
    <!--        set brand_name = #{brandName},-->
    <!--            company_name = #{companyName},-->
    <!--            ordered = #{ordered},-->
    <!--            description = #{description},-->
    <!--            status = #{status}-->
    <!--            where id=#{id};-->
    <!--    </update>-->

    <!--动态修改数据，想改哪个改哪个-->
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName!=null and brandName!=''">
                brand_name = #{brandName},
            </if>
            <if test="companyName!=null and companyName!=''">
                company_name = #{companyName},
            </if>
            <if test="ordered!=null ">
                ordered = #{ordered},
            </if>
            <if test="description!=null and description!=''">
                description = #{description},
            </if>
            <if test="status!=null ">
                status = #{status}
            </if>
        </set>
        where id=#{id};
    </update>

    <!-- 根据Id一个一个删除-->
    <delete id="deleteById">
        delete
        from tb_brand
        where id = #{id};
    </delete>

    <!--根据Id数组 批量删除-->
    <!--
        mybatis会将数组参数，封装成一个Map集合，
            * 默认：array=数组
            * 使用@Param注解改变map集合的key的名称
    -->
    <delete id="deleteByIds">
        delete from tb_brand where id
        in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ;
    </delete>


</mapper>